# -*- coding: utf8 -*-
import sys
from secret_sharing import secret_sharing
from secret_sharing_c import secret_sharing_c

def SecretSharing(PathToInputFile, PathToOutputFile,Churn,LeastTimeToKeep, MaxTimeToKeep):
    OutputFile = open(PathToOutputFile, 'w')
    try:
        MinNumberOfParts = int(LeastTimeToKeep)/int(Churn)
        MaxNumberOfParts = int(MaxTimeToKeep)/int(Churn)
    except:
        MinNumberOfParts = 2
        MaxNumberOfParts = 2

    with open(PathToInputFile) as InputFile:
        OutString = ""
        for line in InputFile: 
            sharecreator = secret_sharing(line, MinNumberOfParts, MaxNumberOfParts)
            for i in range(0,MinNumberOfParts):
                share = sharecreator.share_random()
                OutputFile.write(str(share[1][0])+";"+str(share[1][1])+"\n")
    OutputFile.close()


def main(PathToInputFile, PathToOutputFile,Churn,LeastTimeToKeep, MaxTimeToKeep):
    SecretSharing(PathToInputFile, PathToOutputFile, Churn,LeastTimeToKeep, MaxTimeToKeep)
    print "Block 3 : Encryption Keys -> Parted Keys OK !"
    print "Block 3 : Finished"




if __name__=='__main__':
    sys.exit(main(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5]))
